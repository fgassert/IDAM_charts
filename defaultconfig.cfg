[config]
# savename is the filename to save by; .svg is autoappended
savename = default

# datafile is the filename of the data to be loaded
# file should be in .csv format of 4 columns labeled magnitudebenefit, saliencebenefit, magnitudecost, saliencecost
datafile = defaultdata.csv

#charttype determines chart type as follows:
# 0 = amoeba (magnitude on radius, salience by wedge width/color)
# 1 = column (magnitude height (vertical) salience width/color)
# 2 = bar	 (magnitude length (horizontal) salience width/color)
charttype = 0

# swapsaliencemagnitude swaps the axes to be salience-on-radius and magnitude-by-width/color if true(1)
swapsaliencemagnitude=0

# saliencebywidth sets whether salience is visualized by wedge (column) width
#   0 = no, 1 = linear, >1 = exponential
#   suggested values: 0, 1, math.e
saliencebywidth=1

# saliencebycolor sets whether salience is visualized by wedge color transparency
#   0 = no, 1 = linear, >1 = polynomial
#   suggested values: 0, 2
saliencebycolor=1

# xgrid draws dividers between the columns if True(1)
xgrid = 1
# ygrid draws gridlines at magnitude values if True(1)
ygrid = 1
# drawsaliencedividers draws minor dividers inside wedges (columns) if saliencebywidth is greater than one
drawsaliencedividers=0
# includezerosalience displays a value of 0 salience as nonwhite and width > 0 if true(1)
includezerosalience=0
# includezeromagnitude displays a value of 0 magnitude as height > 0 if true(1)
includezeromagnitude=0

# magnitudearea sets if magnitude rings are sized by radius (0) or by area of wedges (1) (amoeba only)
magnitudearea=1
# magnitudelog sets if magnitude rings (bar heights) sized linearly (0) or logarithmicly with base equal to magnitudelog
#   suggested: 0, math.e
magnitudelog=0

# saliencelegend draws a legend for salience values if true
saliencelegend=1
# magnitudelegend draws a legend for magnitude values if true
magnitudelegend=1

# colorsbenefit and colorscost are lists of three RGB three-tuples for the colors of BP, SE, and GP wedges respectively
#   suggested: [(0,0,192),(0,0,192),(0,0,192)]
colorsbenefit = [(0,96,192),(0,96,192),(0,96,192)]
colorscost = [(192,96,0),(192,96,0),(192,96,0)]

# each amoeba chart is of size 1000x1000 thus a radius of 500 circle will fill the chart
# centerradius sets the size of the empty center hole (ameoba only)
centerradius=155
# edgeradius sets the radius (height) of the maximum magnitude
edgeradius=400
# textradius sets the radius (height) of the labels and dividers
textradius=450

# sets fontsize of text; this is proportional to the overall image size of approximately 2000x1000
#   suggested: 36
font=36

# centerlabel sets the label of the "positive" and "negative" sides of the chart
# 	appears in the center of the ameobas
#   suggested: ['Positive','Negative'], ['',''] 
centerlabel=['Positive','Negative']

##############################
# spacebars leaves an empty column between the three categories if True(1)
spacebars = 1
# ticksize draws ticks of size ticksize if no gridlines
# 	suggested: 0, 15
ticksize = 15
# barline draws a border around bars of width barline if nonzero
# 	suggested: 0, 15
barline = 3
# barlineshade determines how dark the border will be. 0 = black, 1 = color of bar
# 	suggested: 0, .5
barlineshade = .5

maxvalue=3

indicatornames = ['BP1','BP2','BP3','BP4','BP5','BP6','BP7','SE1','SE2','SE3','SE4','SE5','SE6','SE7','GP1','GP2','GP3','GP4','GP5','GP6','GP7',]
indicatorfullnames = ['BP1','BP2','BP3','BP4','BP5','BP6','BP7','SE1','SE2','SE3','SE4','SE5','SE6','SE7','GP1','GP2','GP3','GP4','GP5','GP6','GP7',]
